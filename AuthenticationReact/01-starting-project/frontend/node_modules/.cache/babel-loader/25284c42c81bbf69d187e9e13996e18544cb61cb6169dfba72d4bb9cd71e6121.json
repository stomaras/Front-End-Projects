{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user s\\\\Front-End-Projects\\\\AuthenticationReact\\\\01-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported mode'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch(`http://localhost:8080/${mode}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 402 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('expiration', expiration.toISOString());\n\n  // soon: manage that token\n\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","localStorage","setItem","expiration","Date","setHours","getHours","toISOString","$RefreshReg$"],"sources":["C:/Users/user s/Front-End-Projects/AuthenticationReact/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nimport { json, redirect } from 'react-router-dom';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  if(mode !== 'login' && mode !== 'signup'){\n    throw json({message:'Unsupported mode'}, {status: 422});\n  }\n\n  const data = await request.formData();\n  const authData = {\n    email:data.get('email'),\n    password:data.get('password'),\n  };\n\n  const response = await fetch(`http://localhost:8080/${mode}`, {\n    method:'POST',\n    headers:{\n      'Content-Type':'application/json'\n    },\n    body:JSON.stringify(authData)\n  });\n\n  if(response.status === 402 || response.status === 401){\n    return response;\n  }\n\n  if(!response.ok){\n    throw json({message:'Could not authenticate user'}, {status: 500});\n  }\n\n  const resData = await response.json();\n  const token = resData.token;\n\n  localStorage.setItem('token',token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('expiration', expiration.toISOString());\n\n  // soon: manage that token\n\n  return redirect('/');\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACJ,QAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAE;EACtC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAMf,IAAI,CAAC;MAACiB,OAAO,EAAC;IAAkB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACzD;EAEA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAACH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACvBO,QAAQ,EAACJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC9B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBV,IAAK,EAAC,EAAE;IAC5DW,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC9B,CAAC,CAAC;EAEF,IAAGG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOM,QAAQ;EACjB;EAEA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACd,MAAM/B,IAAI,CAAC;MAACiB,OAAO,EAAC;IAA6B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACpE;EAEA,MAAMc,OAAO,GAAG,MAAMR,QAAQ,CAACxB,IAAI,CAAC,CAAC;EACrC,MAAMiC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAE3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACF,KAAK,CAAC;EACnC,MAAMG,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9CL,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC;;EAE5D;;EAEA,OAAOvC,QAAQ,CAAC,GAAG,CAAC;AACtB;AAAC,IAAAQ,EAAA;AAAAgC,YAAA,CAAAhC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}