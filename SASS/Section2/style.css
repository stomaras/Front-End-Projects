/*
COLORS:

Light green: #7ed567
Medium green: #55c57a
Dark green: #28b485

- The best way to perform basic reset using the universal selector
- How to set project-wide font definitions
- Hot to clip parts of elements using clip-path

box-sizing:border box : margin and padding does not added on total width and height 
                        of an element so we are getting rid of that behaviour
                        margin, padding, border does not included on total width and height
                        of an element
The easiest way to center anything with the transform, top and left properties

How to create CSS animations using the @keyframes and the animation property

A css rule

.my-class {
    color:blue;
    text-align:center;
    font-size: 20px;
}

The cascade the c in css: process of combining different stylesheets and resolving conflicts between deifferent css rules and declarations, when more
                          than one rule applies to a certain element.

IMPORTANCE ------------> Specificity ---------------------> Source Order
Default                 1)Inline styles                     
browser declarations    2)IDs
                        3)Classes, pseudo-classes
                        4)Element, pseudo-elements

How CSS is parsed

all units will converted to pixels 
class wins element always
percentage of parent sometimes if we have percentage

each and every css property will have a value specidied value if we do not specify one initial value 0px
for padding initial value is 0px or specified value

for font-size user-agent default size is 16px (Browser default) cascade value 
font-size section: 1.5rem ---> converted to pixels ---> 24px font-size always relative to root unti font-size so 16px * 1.5rem = 24px
paragraph font-size, which is children of section will be --> 24px due to inheritance

em use the parent or the current element font-size as a reference 
rems use the root font-size as the reference

html {
    font-size:16px;

}


header {
    font-size:24;
    padding: 2em == 2 * current font-size == 48px
    margin-bottom: 10rem === 10 * root font-size = 10 * 16 = 160
}

.header-child {
    font-size: 3em; ---> 3 * parent font-size == 72px
    padding:10%
}

CSS VALUE PROCESSING: WHAT YOU NEED TO KNOW

- Each property has an initial value, used if nothing is declared
- Browsers specify a root font-size for each page (usually 16px)
- Percentages and relative values are always converted to px
- Percentages are measured relative to their parent's font-size, if used to specify font-size;
- Percentages are measured relative to their parents width, if used to specify lengths;
- em are measured relative to their parent font-size , if used to specify font-size
- em are measured relative to the current font-size, if used to specify lengths
- rem are always relative to the document'r root font-size;
- vh, vw are always percentage measyrements of the viewport's height and width


*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


body {
    font-family: sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

/* 95% of viewport height */
.header {
    height: 95vh;
    background-image: 
        linear-gradient(to right bottom,
        rgba(68, 204, 30, 0.712), 
        #28b485) ,
        url(./img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}
/* transform: translate(-50%,-50%) depends on it itself */

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-delay: 3s;
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 400;
    letter-spacing: 15px;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}


.btn {
    margin-top: 40px;
    padding: 15px 40px;
    border-radius: 100px;

}

.btn:link
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    transition: all .2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
    opacity: 0;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.5) scaleY(1.6);
}